/* line 3, stdin */
p {
  line-height: 1.6;
  margin: 30px 0; }

/* line 8, stdin */
a {
  color: #404040; }
  /* line 11, stdin */
  a:hover,
  a:focus {
    color: #0085A1; }

/* line 18, stdin */
a img:hover,
a img:focus {
  cursor: -webkit-zoom-in;
  cursor: zoom-in; }

/* line 23, stdin */
blockquote {
  color: gray;
  font-style: italic; }

/* line 28, stdin */
hr.small {
  max-width: 100px;
  margin: 15px auto;
  border-width: 4px;
  border-color: white; }

/* line 37, stdin */
.navbar-custom {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 3; }
  /* line 43, stdin */
  .navbar-custom .navbar-brand {
    font-weight: 800; }
  /* line 48, stdin */
  .navbar-custom .nav li a {
    text-transform: uppercase;
    font-size: 12px;
    font-weight: 800;
    letter-spacing: 1px; }
  @media only screen and (min-width: 768px) {
    /* line 37, stdin */
    .navbar-custom {
      background: transparent;
      border-bottom: 1px solid transparent; }
      /* line 59, stdin */
      .navbar-custom .navbar-brand {
        color: white;
        padding: 20px; }
        /* line 63, stdin */
        .navbar-custom .navbar-brand:hover,
        .navbar-custom .navbar-brand:focus {
          color: fade(white, 80%); }
      /* line 69, stdin */
      .navbar-custom .nav li a {
        color: white;
        padding: 20px; }
        /* line 73, stdin */
        .navbar-custom .nav li a:hover,
        .navbar-custom .nav li a:focus {
          color: fade(white, 80%); } }
  @media only screen and (min-width: 1170px) {
    /* line 37, stdin */
    .navbar-custom {
      transition: background-color 0.3s;
      /* Force Hardware Acceleration in WebKit */
      -webkit-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0);
      -webkit-backface-visibility: hidden;
      backface-visibility: hidden; }
      /* line 92, stdin */
      .navbar-custom.is-fixed {
        /* when the user scrolls down, we hide the header right above the viewport */
        position: fixed;
        top: -61px;
        background-color: fade(white, 90%);
        border-bottom: 1px solid #f2f2f2;
        transition: -webkit-transform 0.3s;
        transition: transform 0.3s; }
        /* line 101, stdin */
        .navbar-custom.is-fixed .navbar-brand {
          color: #404040; }
          /* line 104, stdin */
          .navbar-custom.is-fixed .navbar-brand:hover,
          .navbar-custom.is-fixed .navbar-brand:focus {
            color: #0085A1; }
        /* line 110, stdin */
        .navbar-custom.is-fixed .nav li a {
          color: #404040; }
          /* line 113, stdin */
          .navbar-custom.is-fixed .nav li a:hover,
          .navbar-custom.is-fixed .nav li a:focus {
            color: #0085A1; }
      /* line 120, stdin */
      .navbar-custom.is-visible {
        /* if the user changes the scrolling direction, we show the header */
        -webkit-transform: translate3d(0, 100%, 0);
        transform: translate3d(0, 100%, 0); } }

/* line 133, stdin */
.intro-header {
  background-color: gray;
  background: no-repeat center center;
  background-attachment: scroll;
  background-size: cover;
  margin-bottom: 50px; }
  /* line 142, stdin */
  .intro-header .site-heading,
  .intro-header .post-heading,
  .intro-header .page-heading {
    padding: 100px 0 50px;
    color: white;
    text-shadow: 1px 1px 3px #222; }
    @media only screen and (min-width: 768px) {
      /* line 142, stdin */
      .intro-header .site-heading,
      .intro-header .post-heading,
      .intro-header .page-heading {
        padding: 150px 0; } }
  /* line 151, stdin */
  .intro-header .site-heading,
  .intro-header .page-heading {
    text-align: center; }
    /* line 153, stdin */
    .intro-header .site-heading h1,
    .intro-header .page-heading h1 {
      margin-top: 0;
      font-size: 50px; }
    /* line 157, stdin */
    .intro-header .site-heading .subheading,
    .intro-header .page-heading .subheading {
      font-size: 24px;
      line-height: 1.1;
      display: block;
      font-weight: 300;
      margin: 10px 0 0; }
    @media only screen and (min-width: 768px) {
      /* line 165, stdin */
      .intro-header .site-heading h1,
      .intro-header .page-heading h1 {
        font-size: 80px; } }
  /* line 171, stdin */
  .intro-header .post-heading h1 {
    font-size: 35px; }
  /* line 175, stdin */
  .intro-header .post-heading .subheading,
  .intro-header .post-heading .meta {
    line-height: 1.1;
    display: block; }
  /* line 179, stdin */
  .intro-header .post-heading .subheading {
    font-size: 24px;
    margin: 10px 0 30px;
    font-weight: 600; }
  /* line 184, stdin */
  .intro-header .post-heading .meta {
    font-style: italic;
    font-weight: 300;
    font-size: 20px; }
    /* line 188, stdin */
    .intro-header .post-heading .meta a {
      color: white; }
  @media only screen and (min-width: 768px) {
    /* line 193, stdin */
    .intro-header .post-heading h1 {
      font-size: 55px; }
    /* line 196, stdin */
    .intro-header .post-heading .subheading {
      font-size: 30px; } }

/* line 206, stdin */
.post-preview > a {
  color: #404040; }
  /* line 209, stdin */
  .post-preview > a:hover,
  .post-preview > a:focus {
    text-decoration: none;
    color: #0085A1; }
  /* line 213, stdin */
  .post-preview > a > .post-title {
    font-size: 30px;
    margin-top: 30px;
    margin-bottom: 10px; }
  /* line 218, stdin */
  .post-preview > a > .post-subtitle {
    margin: 0;
    font-weight: 300;
    margin-bottom: 10px; }

/* line 224, stdin */
.post-preview > .post-meta {
  color: gray;
  font-size: 18px;
  font-style: italic;
  margin-top: 0; }
  /* line 229, stdin */
  .post-preview > .post-meta > a {
    text-decoration: none;
    color: #404040; }
    /* line 233, stdin */
    .post-preview > .post-meta > a:hover,
    .post-preview > .post-meta > a:focus {
      color: #0085A1;
      text-decoration: underline; }

@media only screen and (min-width: 768px) {
  /* line 241, stdin */
  .post-preview > a > .post-title {
    font-size: 36px; } }

/* line 250, stdin */
.section-heading {
  font-size: 36px;
  margin-top: 60px;
  font-weight: 700; }

/* line 256, stdin */
.caption {
  text-align: center;
  font-size: 14px;
  padding: 10px;
  font-style: italic;
  margin: 0;
  display: block;
  border-bottom-right-radius: 5px;
  border-bottom-left-radius: 5px; }

/* line 267, stdin */
footer {
  padding: 50px 0 65px; }
  /* line 269, stdin */
  footer .list-inline {
    margin: 0;
    padding: 0; }
  /* line 273, stdin */
  footer .copyright {
    font-size: 14px;
    text-align: center;
    margin-bottom: 0; }

/* line 282, stdin */
.floating-label-form-group {
  font-size: 14px;
  position: relative;
  margin-bottom: 0;
  padding-bottom: 0.5em;
  border-bottom: 1px solid #eee; }
  /* line 289, stdin */
  .floating-label-form-group input,
  .floating-label-form-group textarea {
    z-index: 1;
    position: relative;
    padding-right: 0;
    padding-left: 0;
    border: none;
    border-radius: 0;
    font-size: 1.5em;
    background: none;
    box-shadow: none !important;
    resize: none; }
  /* line 301, stdin */
  .floating-label-form-group label {
    display: block;
    z-index: 0;
    position: relative;
    top: 2em;
    margin: 0;
    font-size: 0.85em;
    line-height: 1.764705882em;
    vertical-align: middle;
    vertical-align: baseline;
    opacity: 0;
    transition: top 0.3s ease, opacity 0.3s ease; }
  /* line 317, stdin */
  .floating-label-form-group::not(:first-child) {
    padding-left: 14px;
    border-left: 1px solid #eee; }

/* line 324, stdin */
.floating-label-form-group-with-value label {
  top: 0;
  opacity: 1; }

/* line 331, stdin */
.floating-label-form-group-with-focus label {
  color: #0085A1; }

/* line 336, stdin */
form .row:first-child .floating-label-form-group {
  border-top: 1px solid #eee; }

/* line 342, stdin */
.btn {
  text-transform: uppercase;
  font-size: 14px;
  font-weight: 800;
  letter-spacing: 1px;
  border-radius: 0;
  padding: 15px 25px; }

/* line 351, stdin */
.btn-lg {
  font-size: 16px;
  padding: 25px 35px; }

/* line 358, stdin */
.btn-default:hover,
.btn-default:focus {
  background-color: #0085A1;
  border: 1px solid #0085A1;
  color: white; }

/* line 367, stdin */
.pager {
  margin: 20px 0 0; }
  /* line 373, stdin */
  .pager li > a,
  .pager li > span {
    text-transform: uppercase;
    font-size: 14px;
    font-weight: 800;
    letter-spacing: 1px;
    padding: 15px 25px;
    background-color: white;
    border-radius: 0; }
  /* line 384, stdin */
  .pager li > a:hover,
  .pager li > a:focus {
    color: white;
    background-color: #0085A1;
    border: 1px solid #0085A1; }
  /* line 395, stdin */
  .pager .disabled > a,
  .pager .disabled > a:hover,
  .pager .disabled > a:focus,
  .pager .disabled > span {
    color: gray;
    background-color: #404040;
    cursor: not-allowed; }

/* line 405, stdin */
::-moz-selection {
  color: white;
  text-shadow: none;
  background: #0085A1; }

/* line 411, stdin */
::-moz-selection {
  color: white;
  text-shadow: none;
  background: #0085A1; }
::selection {
  color: white;
  text-shadow: none;
  background: #0085A1; }

/* line 417, stdin */
img::-moz-selection {
  color: white;
  background: transparent; }
img::selection {
  color: white;
  background: transparent; }

/* line 422, stdin */
img::-moz-selection {
  color: white;
  background: transparent; }

/* line 427, stdin */
body {
  webkit-tap-highlight-color: #0085A1; }

/*# sourceMappingURL=data:application/json;base64, */